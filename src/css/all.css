/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
@import url("https://fonts.googleapis.com/css?family=PT+Serif");
@import url("https://fonts.googleapis.com/css?family=Montserrat:300,400,600,700");
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }
  html {
    font-size: 16px; }
    @media screen and (min-width: 320px) {
      html {
        font-size: calc(16px + 3 * ((100vw - 320px) / 880)); } }
    @media screen and (min-width: 1200px) {
      html {
        font-size: 19px; } }
  html .article__text {
    font-size: 16px; }
    @media screen and (min-width: 320px) {
      html .article__text {
        font-size: calc(16px + 3 * ((100vw - 320px) / 880)); } }
    @media screen and (min-width: 1200px) {
      html .article__text {
        font-size: 19px; } }

*, *:before, *:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }

.center-section {
  margin: 0 auto;
  max-width: 1200px;
  padding: 0 35px; }
  @media (min-width: 1200px) {
    .center-section {
      padding: 0; } }

.site-container {
  position: relative; }

img {
  display: block;
  -o-object-fit: scale-down;
     object-fit: scale-down;
  max-height: 100%;
  max-width: 100%; }

.section-header-wrapper {
  text-align: center;
  overflow: hidden; }

.section-header {
  color: #97735d;
  border: 1px solid #97735d;
  text-align: center;
  margin: 3.125rem 0;
  padding: 2.1875rem 0;
  font-size: 2.1875rem;
  font-family: "Montserrat", sans-serif;
  font-weight: 600; }
  @media (min-width: 720px) {
    .section-header {
      display: inline-block;
      margin: 5rem 0 6.25rem 0;
      padding: 0.4375rem 0.9375rem;
      position: relative;
      font-size: 1.25rem; }
      .section-header:before {
        content: '';
        width: 37.5rem;
        border-bottom: 1px solid #97735d;
        position: absolute;
        right: 100%;
        top: 50%; }
      .section-header:after {
        content: '';
        width: 37.5rem;
        border-bottom: 1px solid #97735d;
        position: absolute;
        left: 100%;
        top: 50%; } }

.btn {
  display: block;
  min-width: 10rem;
  background-color: #97735d;
  color: white;
  border: 0;
  margin: 0.625rem;
  padding: 1rem 1.5rem;
  font-family: "Montserrat", sans-serif;
  font-size: 0.75rem;
  font-weight: 700;
  text-transform: uppercase;
  cursor: pointer; }
  .btn--secondary {
    background: transparent;
    border: 1px solid white;
    font-weight: 600;
    position: relative; }
  .btn--third {
    background-color: white;
    color: #97735d; }

.btn--modifer-lines {
  padding: 0.4375rem 0.9375rem;
  min-width: 6.75rem;
  font-size: 0.625rem; }
  @media (min-width: 992px) {
    .btn--modifer-lines {
      padding: 0.3125rem 0.75rem;
      min-width: 5.625rem;
      font-size: 0.625rem; }
      .btn--modifer-lines:after {
        content: '';
        width: 15%;
        border-bottom: 1px solid white;
        position: absolute;
        left: 107%;
        top: 50%; }
      .btn--modifer-lines:before {
        content: '';
        width: 15%;
        border-bottom: 1px solid white;
        position: absolute;
        left: -23%;
        top: 50%; } }

.article {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  font-family: "Montserrat", sans-serif;
  text-align: center; }
  @media (min-width: 992px) {
    .article {
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
          -ms-flex-direction: row;
              flex-direction: row; } }

@media (min-width: 992px) {
  .article__content {
    min-width: 21.875rem;
    max-width: 37.5rem;
    padding: 0 4%;
    -webkit-box-flex: 1;
        -ms-flex-positive: 1;
            flex-grow: 1; } }

@media (min-width: 992px) {
  .article__img-wrapper {
    width: 45.625rem;
    -webkit-box-flex: 2;
        -ms-flex-positive: 2;
            flex-grow: 2; } }

@media (min-width: 992px) {
  .article__img {
    -o-object-fit: contain;
       object-fit: contain;
    min-width: 28.125rem; } }

@media (min-width: 1200px) {
  .article__img {
    min-width: 34.375rem;
    -o-object-fit: fill;
       object-fit: fill;
    width: 100%;
    height: 100%; } }

.article__header {
  color: #97735d;
  font-size: 1.375rem;
  margin: 1.875rem 0; }
  @media (min-width: 992px) {
    .article__header {
      margin: 0; } }

.article__text {
  font-family: "PT Serif", serif;
  text-align: justify;
  color: #b2b1af; }

.article__buttons {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  margin: 1.25rem; }
  @media (max-width: 27.5rem) {
    .article__buttons {
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
          -ms-flex-direction: column;
              flex-direction: column; } }

.slider {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden; }

.slide {
  background-size: cover;
  height: 100vh;
  width: 100vw;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-transform: translateX(-100vw);
      -ms-transform: translateX(-100vw);
          transform: translateX(-100vw); }

.animate {
  -webkit-transition-duration: 1s;
  -o-transition-duration: 1s;
  transition-duration: 1s;
  -webkit-transition-property: -webkit-transform;
  -o-transition-property: -o-transform;
  transition-property: -webkit-transform;
  -o-transition-property: transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform; }

.prev-arrow {
  position: absolute;
  top: 50%;
  left: 15%;
  background: url(/img/leftsliderarrow.svg) no-repeat;
  background-size: cover;
  background-color: green;
  height: 2.125rem;
  width: 1.125rem;
  cursor: pointer; }

.next-arrow {
  position: absolute;
  top: 50%;
  right: 15%;
  background: url(/img/rightsliderarrow.svg) no-repeat;
  background-size: cover;
  background-color: black;
  height: 2.125rem;
  width: 1.125rem;
  cursor: pointer; }

.slide-bg1 {
  background-color: darkcyan; }

.slide-bg2 {
  background-color: olive; }

.slide-bg3 {
  background-color: darkgreen; }

.gallery__thumbnail {
  margin: 0.9375rem;
  position: relative;
  height: 100%; }
  .gallery__thumbnail .wrapper-thumbnail__description {
    border: 15px solid rgba(248, 213, 190, 0.2);
    width: 100%;
    bottom: 0;
    left: 0;
    position: absolute; }
  .gallery__thumbnail .gallery__thumbnail__description {
    padding-right: 1.25rem;
    background: rgba(151, 115, 93, 0.9);
    display: inline-block;
    width: 100%; }
  .gallery__thumbnail .gallery__thumbnail__header {
    color: white;
    font-family: "Montserrat", sans-serif;
    font-size: 0.8125rem;
    margin: 0.625rem 0 0 0.3125rem; }
  .gallery__thumbnail .gallery__thumbnail__text {
    font-family: "PT Serif", serif;
    font-size: 0.75rem;
    color: white;
    opacity: 0.1;
    margin: 0.3125rem 0 0.3125rem 0.3125rem; }

@media (min-width: 951px) {
  .wrapper-thumbnail__description {
    display: none; }
    .wrapper-thumbnail__description .gallery__thumbnail__description {
      display: none; }
      .wrapper-thumbnail__description .gallery__thumbnail__description .gallery__thumbnail__header {
        display: none; }
      .wrapper-thumbnail__description .gallery__thumbnail__description .gallery__thumbnail__text {
        display: none; }
      .wrapper-thumbnail__description .gallery__thumbnail__description .btn {
        display: none; }
  .gallery__thumbnail:hover .wrapper-thumbnail__description {
    display: inline-block;
    border: 15px solid rgba(248, 213, 190, 0.2);
    width: 100%;
    height: 100%;
    bottom: 0;
    left: 0;
    position: absolute; }
  .gallery__thumbnail:hover .gallery__thumbnail__description {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
    height: 100%;
    padding-right: 1.25rem;
    background: rgba(151, 115, 93, 0.9); }
  .gallery__thumbnail:hover .gallery__thumbnail__header {
    display: inline;
    color: white;
    font-family: "Montserrat", sans-serif;
    font-size: 0.8125rem;
    margin: 0.3125rem 0 0 1.875rem; }
  .gallery__thumbnail:hover .gallery__thumbnail__text {
    display: inline;
    font-family: "PT Serif", serif;
    font-size: 0.75rem;
    color: white;
    opacity: 0.1;
    margin: 0.3125rem 0 0.3125rem 1.875rem; }
  .gallery__thumbnail:hover .btn--gallery {
    display: inline;
    max-width: 6.25rem;
    -ms-flex-item-align: center;
        align-self: center;
    margin-top: 3.75rem;
    margin-bottom: 1.875rem; } }

.welcome {
  position: relative;
  max-width: none;
  height: 100vh;
  overflow: hidden; }

.navigation {
  position: fixed;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between; }
  .navigation__logo-wrapper {
    width: 70px; }
    .navigation__logo-wrapper .logo {
      display: block;
      background: url(/img/logo.svg) no-repeat;
      text-indent: -999px; }

.welcome-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  max-width: 68.75rem; }

.welcome-header-wrapper {
  text-align: center; }

.welcome-header {
  font-family: "Montserrat", sans-serif;
  font-weight: 400;
  color: white;
  font-size: 2.4rem;
  margin-bottom: 80px;
  line-height: 70%; }
  .welcome-header .welcome-header--bold {
    font-weight: 700;
    font-size: 1.7rem; }

.about-icons {
  margin: 2.8125rem 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around; }
  @media (min-width: 992px) {
    .about-icons {
      margin: 1.5625rem 0 0.625rem 0; } }

.wrapper-icon {
  text-align: center;
  min-width: 90px;
  background: white;
  position: relative; }
  .wrapper-icon:after {
    content: '';
    width: 20vw;
    border-bottom: 1px solid #97735d;
    position: absolute;
    left: 100%;
    top: 30%; }
    @media (min-width: 992px) {
      .wrapper-icon:after {
        width: 5vw; } }
  .wrapper-icon:last-child:after {
    height: 100px;
    display: none;
    border-bottom: 11px solid #97735d; }
  .wrapper-icon .about-icons__icon {
    -o-object-fit: fill;
       object-fit: fill;
    height: 65px;
    width: 65px; }
  .wrapper-icon .about-icons__header {
    font-size: 0.625rem;
    color: #747371; }

.categories {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center; }
  .categories .categories__list {
    list-style: none;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    min-width: 36.25rem;
    padding: 0;
    margin: 0; }
  .categories .category__link {
    color: #b2b1af;
    font-family: "Montserrat", sans-serif;
    font-size: 0.75rem;
    text-decoration: none; }
    .categories .category__link:hover {
      color: rgba(0, 0, 0, 0.9); }

@media (max-width: 720px) {
  .categories,
  .categories__list,
  .categories__list {
    display: none; } }

.gallery-row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin-bottom: 2.5rem; }

.gallery-load {
  -ms-flex-wrap: nowrap;
      flex-wrap: nowrap; }

@media (max-width: 950px) {
  .gallery-load {
    -ms-flex-wrap: wrap;
        flex-wrap: wrap; } }

.clients-logos {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center; }

.clients-arrows {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center; }

.left {
  float: left; }

.right {
  float: right; }

.center {
  margin: 0 auto; }

.clearfix:after {
  content: ".";
  visibility: hidden;
  display: block;
  height: 0;
  clear: both; }

.hide {
  display: none; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
